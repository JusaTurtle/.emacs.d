#+STARTUP: overview hidestars 
* Interface Tweaks
** Genergal
#+BEGIN_SRC emacs-lisp
(setq inhibit-startup-message t)
(tool-bar-mode -1)
(menu-bar-mode -1)
(scroll-bar-mode -1)
(fset 'yes-or-no-p 'y-or-n-p)
#+END_SRC

** Theme
#+BEGIN_SRC emacs-lisp
(use-package solarized-theme
  :ensure t
  :init (load-theme 'solarized-dark t))
#+END_SRC

** Font
#+BEGIN_SRC emacs-lisp
(set-face-attribute 'default nil :font "Fira Code Retina" :height 100)
#+END_SRC

** Alias
#+BEGIN_SRC emacs-lisp
(defalias 'list-buffers 'ibuffer-other-window)
#+END_SRC
* Try
#+BEGIN_SRC emacs-lisp
(use-package try
  :ensure t)
#+END_SRC

* Which Key
#+BEGIN_SRC emacs-lisp
(use-package which-key
  :ensure t
  :init (which-key-mode))
#+END_SRC

t* evil
#+BEGIN_SRC emacs-lisp
(use-package evil
  :ensure t
  :config (evil-mode))
#+END_SRC

* Company
#+BEGIN_SRC emacs-lisp
(use-package company
  :ensure t
  :init (add-hook 'after-init-hook 'global-company-mode)
  :config
  (setq company-idle-delay 0)
  (setq company-minimum-prefix-length 3))
#+END_SRC

* Ido
#+BEGIN_SRC emacs-lisp
(setq ido-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1)
#+END_SRC
* Org
#+BEGIN_SRC emacs-lisp
(use-package org-bullets 
  :ensure t)
(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
#+END_SRC
* C/C++
#+BEGIN_SRC emacs-lisp
#+END_SRC
* Auto Save
#+BEGIN_SRC emacs-lisp
(setq backup-directory-alist 
      '(("." . "~/.emacs-saves")))
#+END_SRC
